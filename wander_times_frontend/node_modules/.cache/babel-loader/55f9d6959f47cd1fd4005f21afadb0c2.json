{"ast":null,"code":"var _jsxFileName = \"/Users/stan-0/Desktop/personal projects/wander_times/wander_times_frontend/src/App.js\";\n// import React,{ Fragment } from 'react';\n// import './App.css';\n// import CategoryContainer from './Containers/CategoryContainer'\n// import NavContainer from './Containers/NavContainer'\n// import MainContainer from './Containers/MainContainer'\n// import Login from './Components/Login'\n// import Signup from './Components/Signup'\n// import Profile from './Components/Profile'\n// import { Switch, Route, } from 'react-router-dom'\n// class App extends React.Component{\n//   state = {\n//     articles: [],\n//     // selectedArticles: [],\n//     loading: true, \n//     filter: \"\",\n//     selectedCategory: null, \n//     selectedArticle: [],\n//     currentUser: null,\n//     likes: []\n//   }\n//   componentDidMount(){\n//     // let url = \"https://newsapi.org/v2/everything?q=technology&from=2019-09-10&sortBy=publishedAt&apiKey=f0a7beb8be6040cfadf7471e6a6676b4\"\n//     let url = \"http://localhost:3010/api/v1/articles\"\n//     fetch(url)\n//     .then(resp=>resp.json())\n//     .then(article=>{\n//       this.setState({\n//         articles: article,\n//         // selectedArticles: article\n//       })\n//     })\n//     const token=localStorage.getItem(\"token\")\n//     if(token){\n//       fetch(\"http://localhost:3010/api/v1/auto_login\", {\n//               headers: {\n//                 \"Authorization\": token\n//             }\n//           })\n//           .then(res => res.json())\n//           .then(response=>{\n//             if(response.errors){\n//               localStorage.removeItem(\"user_id\")\n//               alert(response.errors)\n//             } else{\n//               this.setState({\n//                 currentUser: response\n//               })\n//             }\n//           })\n//         }\n//       }\n//   setCurrentUser = user =>{\n//     this.setState({\n//       currentUser: user\n//     })\n//   }\n//   logout = () =>{\n//     this.setState({\n//       currentUser: null\n//     })\n//     this.props.history.push('/')\n//   }\n//   // changeFilter = (filterInput) => {\n//   //   console.log(filterInput)\n//   //   this.setState({\n//   //     filter: filterInput\n//   //   })\n//   // }\n//   handleSearch = (event) => {\n//     this.setState({\n//       filter: event.target.value\n//     })\n//   }\n//   changeCategory = (category) => {\n//     this.setState({\n//       selectedCategory: category\n//     })\n//   }\n//   categoryFilter = () => {\n//     let selected;\n//     switch(this.state.selectedCategory){\n//       case \"tech\":\n//         selected= this.state.articles.filter(article=>article.category===\"tech\")\n//         break;\n//       case \"travel\":\n//         selected = this.state.articles.filter(article=>article.category===\"travel\")\n//         break;\n//       default:\n//         selected= this.state.articles\n//         break;\n//     }\n//     return selected\n//   }\n//   addLikes = selectedArticle => {\n//     this.setState({\n//       likes: [selectedArticle, ...this.state.likes]\n//     })\n//   }\n//   // handleSubmit = (event, user_id, article_id) => {\n//     //     event.preventDefault()\n//     //     let url=\"http://localhost:3010/api/v1/likes\"\n//     //     fetch(url,{\n//     //         method: \"POST\",\n//     //         headers: {\n//     //             \"Content-Type\": \"application/json\",\n//     //             \"Accept\": \"application/json\",\n//     //             \"Authorization\": `Bearer ${localStorage.token}`\n//     //         },\n//     //         body: JSON.stringify({\n//     //             user_id: user_id,\n//     //             article_id: article_id\n//     //         })\n//     //     })\n//     //     .then(res=>res.json())\n//     //     .then(response=> this.props.addLikes(response))\n//     // }\n//   // addLikes = articleObj => {\n//   //   if(!this.state.likes.includes(articleObj)){\n//   //     let url=\"http://localhost:3010/api/v1/likes\"\n//   //     fetch(url,{\n//   //       method: \"POST\",\n//   //       headers: {\n//   //         \"Content-Type\": \"application/json\",\n//   //         \"Accepts\": \"application/json\",\n//   //         \"Authorization\": `Bearer ${localStorage.token}`\n//   //       }, \n//   //       body: JSON.stringify({article_id: articleObj.id})\n//   //     })\n//   //     .then(res=>res.json())\n//   //     .then(liked=>{\n//   //       this.setState({\n//   //         likes: [liked, ...this.state.likes]\n//   //       })\n//   //     })\n//   //   }\n//   // }\n//   deleteLikes = articleId => {\n//     let url= `http://localhost:3010/api/v1/likes/${articleId}`\n//     fetch(url,{\n//       method: \"DELETE\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         \"Accept\": \"application/json\"\n//       }\n//     })\n//     .then(()=>{\n//       let filtered=this.state.likes.filter(liked=>liked.id !== articleId)\n//       this.setState({\n//         likes: filtered\n//       })\n//     })\n//   }\n//   selectedArticle = article => {\n//     this.setState({\n//       selectedArticle: article \n//     })\n//   }\n//   render(){\n//     // {this.state.articles.filter(article=>{\n//     //   return article.title.toLowerCase().includes(this.state.filter.toLowerCase()) ||\n//     //          article.overview.toLowerCase().includes(this.state.filter.toLowerCase())\n//     // })}\n//     return(\n//       <div>\n//         <h1 href=\"/\" style={{textAlign:\"center\", color: \"dark grey\"}}> THE WANDER TIMES\n//         </h1>\n//         <NavContainer currentUser={this.state.currentUser}\n//                       handleSearch={this.handleSearch}\n//                       logout={this.logout}\n//                       />\n//            <Switch>\n//           <Route path='/users/:id' \n//                   render={(routerProps)=>{\n//                     return <Profile\n//                     deleteLikes={this.deleteLikes}\n//                     likes={this.state.likes}\n//                     articles={this.state.articles}\n//                     selectedArticle={this.selectedArticle}\n//                   {...routerProps}\n//            />\n//          }}></Route>\n//           <Route path='/login' \n//                  render={(routerProps)=>{\n//                      return <Login \n//                      setCurrentUser={this.setCurrentUser}\n//                      likes={this.state.likes}\n//                    {...routerProps}\n//             />\n//           }}></Route>\n//            <Route path='/signup' \n//                  render={(routerProps)=>{\n//                      return <Signup \n//                      setCurrentUser={this.setCurrentUser} \n//                    {...routerProps}\n//             />\n//           }}></Route>\n//           <Route path='/' render={(routerProps)=>{\n//             return  <Fragment> <CategoryContainer articles={this.state.articles}\n//             changeCategory={this.changeCategory}\n//             categoryFilter={this.categoryFilter} {...routerProps}\n//          />\n//         <MainContainer\n//         articles={this.categoryFilter()}\n//         filter={this.state.filter}\n//         addLikes={this.addLikes}\n//         deleteLikes={this.deleteLikes}\n//         currentUser={this.state.currentUser}\n//         selectedArticle={this.selectedArticle}\n//         />\n//           </Fragment>\n//           }}>\n//           </Route>\n//         </Switch>\n//       </div>  \n//     )\n//   }\n// }\n// export default App;\nimport React, { Fragment } from 'react';\nimport './App.css';\nimport CategoryContainer from './Containers/CategoryContainer';\nimport NavContainer from './Containers/NavContainer';\nimport MainContainer from './Containers/MainContainer';\nimport Login from './Components/Login';\nimport Signup from './Components/Signup';\nimport Profile from './Components/Profile';\nimport { Switch, Route } from 'react-router-dom';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      articles: [],\n      selectedArticles: [],\n      loading: true,\n      filter: \"\",\n      selectedCategory: null,\n      selectedArticle: [],\n      currentUser: null,\n      likes: []\n    };\n\n    this.setCurrentUser = user => {\n      this.setState({\n        currentUser: user,\n        likes: user.likes\n      });\n    };\n\n    this.logout = () => {\n      this.setState({\n        currentUser: null\n      });\n      this.props.history.push('/');\n    };\n\n    this.handleSearch = event => {\n      this.setState({\n        filter: event.target.value\n      });\n    };\n\n    this.changeCategory = category => {\n      this.setState({\n        selectedCategory: category\n      });\n    };\n\n    this.categoryFilter = () => {\n      let selected;\n\n      switch (this.state.selectedCategory) {\n        case \"tech\":\n          selected = this.state.articles.filter(article => article.category === \"tech\");\n          break;\n\n        case \"travel\":\n          selected = this.state.articles.filter(article => article.category === \"travel\");\n          break;\n\n        default:\n          selected = this.state.articles;\n          break;\n      }\n\n      return selected;\n    };\n\n    this.addLikes = selectedArticle => {\n      console.log(selectedArticle);\n      this.setState({\n        likes: [selectedArticle, ...this.state.likes]\n      });\n    };\n\n    this.deleteLikes = remLiked => {};\n\n    this.selectedArticle = article => {\n      console.log(article);\n      this.setState({\n        selectedArticle: article\n      });\n    };\n  }\n\n  componentDidMount() {\n    let url = \"http://localhost:3010/api/v1/articles\";\n    fetch(url).then(resp => resp.json()).then(article => {\n      this.setState({\n        articles: article // selectedArticles: article\n\n      });\n    });\n    const token = localStorage.getItem(\"token\");\n\n    if (token) {\n      fetch(\"http://localhost:3010/api/v1/auto_login\", {\n        headers: {\n          \"Authorization\": token\n        }\n      }).then(res => res.json()).then(response => {\n        if (response.errors) {\n          localStorage.removeItem(\"user_id\");\n          alert(response.errors);\n        } else {\n          this.setState({\n            currentUser: response\n          });\n        }\n      });\n    }\n  }\n\n  render() {\n    // {this.state.articles.filter(article=>{\n    //   return article.title.toLowerCase().includes(this.state.filter.toLowerCase()) ||\n    //          article.overview.toLowerCase().includes(this.state.filter.toLowerCase())\n    // })}\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      href: \"/\",\n      style: {\n        textAlign: \"center\",\n        color: \"dark grey\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, \" THE WANDER TIMES\"), React.createElement(NavContainer, {\n      currentUser: this.state.currentUser,\n      handleSearch: this.handleSearch,\n      logout: this.logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/users/:id\",\n      render: routerProps => {\n        return React.createElement(Profile, Object.assign({\n          deleteLikes: this.deleteLikes,\n          likes: this.state.likes,\n          articles: this.state.articles,\n          selectedArticle: this.selectedArticle,\n          deleteLikes: this.deleteLikes\n        }, routerProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 388\n          },\n          __self: this\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/login\",\n      render: routerProps => {\n        return React.createElement(Login, Object.assign({\n          setCurrentUser: this.setCurrentUser\n        }, routerProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 399\n          },\n          __self: this\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/signup\",\n      render: routerProps => {\n        return React.createElement(Signup, Object.assign({\n          setCurrentUser: this.setCurrentUser\n        }, routerProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 406\n          },\n          __self: this\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/\",\n      render: routerProps => {\n        return React.createElement(Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 412\n          },\n          __self: this\n        }, \" \", React.createElement(CategoryContainer, Object.assign({\n          articles: this.state.articles,\n          changeCategory: this.changeCategory,\n          categoryFilter: this.categoryFilter\n        }, routerProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 412\n          },\n          __self: this\n        })), React.createElement(MainContainer, {\n          articles: this.categoryFilter(),\n          filter: this.state.filter,\n          addLikes: this.addLikes,\n          currentUser: this.state.currentUser,\n          selectedArticle: this.selectedArticle,\n          deleteLikes: this.deleteLikes,\n          likes: this.state.likes,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 416\n          },\n          __self: this\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/stan-0/Desktop/personal projects/wander_times/wander_times_frontend/src/App.js"],"names":["React","Fragment","CategoryContainer","NavContainer","MainContainer","Login","Signup","Profile","Switch","Route","App","Component","state","articles","selectedArticles","loading","filter","selectedCategory","selectedArticle","currentUser","likes","setCurrentUser","user","setState","logout","props","history","push","handleSearch","event","target","value","changeCategory","category","categoryFilter","selected","article","addLikes","console","log","deleteLikes","remLiked","componentDidMount","url","fetch","then","resp","json","token","localStorage","getItem","headers","res","response","errors","removeItem","alert","render","textAlign","color","routerProps"],"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","sourcesContent":["// import React,{ Fragment } from 'react';\n// import './App.css';\n// import CategoryContainer from './Containers/CategoryContainer'\n// import NavContainer from './Containers/NavContainer'\n// import MainContainer from './Containers/MainContainer'\n// import Login from './Components/Login'\n// import Signup from './Components/Signup'\n// import Profile from './Components/Profile'\n// import { Switch, Route, } from 'react-router-dom'\n\n// class App extends React.Component{\n//   state = {\n//     articles: [],\n//     // selectedArticles: [],\n//     loading: true, \n//     filter: \"\",\n//     selectedCategory: null, \n//     selectedArticle: [],\n//     currentUser: null,\n//     likes: []\n//   }\n\n//   componentDidMount(){\n//     // let url = \"https://newsapi.org/v2/everything?q=technology&from=2019-09-10&sortBy=publishedAt&apiKey=f0a7beb8be6040cfadf7471e6a6676b4\"\n//     let url = \"http://localhost:3010/api/v1/articles\"\n   \n//     fetch(url)\n//     .then(resp=>resp.json())\n//     .then(article=>{\n//       this.setState({\n//         articles: article,\n//         // selectedArticles: article\n//       })\n//     })\n//     const token=localStorage.getItem(\"token\")\n//     if(token){\n//       fetch(\"http://localhost:3010/api/v1/auto_login\", {\n//               headers: {\n//                 \"Authorization\": token\n//             }\n//           })\n//           .then(res => res.json())\n//           .then(response=>{\n//             if(response.errors){\n//               localStorage.removeItem(\"user_id\")\n//               alert(response.errors)\n//             } else{\n//               this.setState({\n//                 currentUser: response\n//               })\n//             }\n//           })\n//         }\n//       }\n\n//   setCurrentUser = user =>{\n//     this.setState({\n//       currentUser: user\n//     })\n//   }\n\n//   logout = () =>{\n//     this.setState({\n//       currentUser: null\n//     })\n//     this.props.history.push('/')\n//   }\n//   // changeFilter = (filterInput) => {\n//   //   console.log(filterInput)\n//   //   this.setState({\n//   //     filter: filterInput\n//   //   })\n//   // }\n\n//   handleSearch = (event) => {\n//     this.setState({\n//       filter: event.target.value\n//     })\n//   }\n\n//   changeCategory = (category) => {\n//     this.setState({\n//       selectedCategory: category\n//     })\n//   }\n\n//   categoryFilter = () => {\n//     let selected;\n//     switch(this.state.selectedCategory){\n//       case \"tech\":\n//         selected= this.state.articles.filter(article=>article.category===\"tech\")\n//         break;\n//       case \"travel\":\n//         selected = this.state.articles.filter(article=>article.category===\"travel\")\n//         break;\n//       default:\n//         selected= this.state.articles\n//         break;\n//     }\n//     return selected\n//   }\n\n//   addLikes = selectedArticle => {\n//     this.setState({\n//       likes: [selectedArticle, ...this.state.likes]\n//     })\n//   }\n\n\n//   // handleSubmit = (event, user_id, article_id) => {\n//     //     event.preventDefault()\n//     //     let url=\"http://localhost:3010/api/v1/likes\"\n//     //     fetch(url,{\n//     //         method: \"POST\",\n//     //         headers: {\n//     //             \"Content-Type\": \"application/json\",\n//     //             \"Accept\": \"application/json\",\n//     //             \"Authorization\": `Bearer ${localStorage.token}`\n//     //         },\n//     //         body: JSON.stringify({\n//     //             user_id: user_id,\n//     //             article_id: article_id\n//     //         })\n//     //     })\n//     //     .then(res=>res.json())\n//     //     .then(response=> this.props.addLikes(response))\n//     // }\n\n//   // addLikes = articleObj => {\n//   //   if(!this.state.likes.includes(articleObj)){\n//   //     let url=\"http://localhost:3010/api/v1/likes\"\n//   //     fetch(url,{\n//   //       method: \"POST\",\n//   //       headers: {\n//   //         \"Content-Type\": \"application/json\",\n//   //         \"Accepts\": \"application/json\",\n//   //         \"Authorization\": `Bearer ${localStorage.token}`\n//   //       }, \n//   //       body: JSON.stringify({article_id: articleObj.id})\n//   //     })\n//   //     .then(res=>res.json())\n//   //     .then(liked=>{\n//   //       this.setState({\n//   //         likes: [liked, ...this.state.likes]\n//   //       })\n//   //     })\n//   //   }\n//   // }\n\n//   deleteLikes = articleId => {\n//     let url= `http://localhost:3010/api/v1/likes/${articleId}`\n//     fetch(url,{\n//       method: \"DELETE\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         \"Accept\": \"application/json\"\n//       }\n//     })\n//     .then(()=>{\n//       let filtered=this.state.likes.filter(liked=>liked.id !== articleId)\n//       this.setState({\n//         likes: filtered\n//       })\n//     })\n//   }\n\n//   selectedArticle = article => {\n//     this.setState({\n//       selectedArticle: article \n//     })\n//   }\n  \n//   render(){\n//     // {this.state.articles.filter(article=>{\n//     //   return article.title.toLowerCase().includes(this.state.filter.toLowerCase()) ||\n//     //          article.overview.toLowerCase().includes(this.state.filter.toLowerCase())\n//     // })}\n//     return(\n//       <div>\n//         <h1 href=\"/\" style={{textAlign:\"center\", color: \"dark grey\"}}> THE WANDER TIMES\n//         </h1>\n//         <NavContainer currentUser={this.state.currentUser}\n//                       handleSearch={this.handleSearch}\n//                       logout={this.logout}\n//                       />\n//            <Switch>\n//           <Route path='/users/:id' \n//                   render={(routerProps)=>{\n//                     return <Profile\n//                     deleteLikes={this.deleteLikes}\n//                     likes={this.state.likes}\n//                     articles={this.state.articles}\n//                     selectedArticle={this.selectedArticle}\n//                   {...routerProps}\n//            />\n//          }}></Route>\n//           <Route path='/login' \n//                  render={(routerProps)=>{\n//                      return <Login \n//                      setCurrentUser={this.setCurrentUser}\n//                      likes={this.state.likes}\n//                    {...routerProps}\n//             />\n//           }}></Route>\n//            <Route path='/signup' \n//                  render={(routerProps)=>{\n//                      return <Signup \n//                      setCurrentUser={this.setCurrentUser} \n//                    {...routerProps}\n//             />\n//           }}></Route>\n//           <Route path='/' render={(routerProps)=>{\n//             return  <Fragment> <CategoryContainer articles={this.state.articles}\n//             changeCategory={this.changeCategory}\n//             categoryFilter={this.categoryFilter} {...routerProps}\n//          />\n//         <MainContainer\n//         articles={this.categoryFilter()}\n//         filter={this.state.filter}\n//         addLikes={this.addLikes}\n//         deleteLikes={this.deleteLikes}\n//         currentUser={this.state.currentUser}\n//         selectedArticle={this.selectedArticle}\n//         />\n//           </Fragment>\n//           }}>\n//           </Route>\n//         </Switch>\n//       </div>  \n//     )\n//   }\n// }\n\n// export default App;\nimport React,{ Fragment } from 'react';\nimport './App.css';\nimport CategoryContainer from './Containers/CategoryContainer'\nimport NavContainer from './Containers/NavContainer'\nimport MainContainer from './Containers/MainContainer'\nimport Login from './Components/Login'\nimport Signup from './Components/Signup'\nimport Profile from './Components/Profile'\nimport { Switch, Route, } from 'react-router-dom'\n\nclass App extends React.Component{\n  state = {\n    articles: [],\n    selectedArticles: [],\n    loading: true, \n    filter: \"\",\n    selectedCategory: null, \n    selectedArticle: [],\n    currentUser: null,\n    likes: []\n  }\n\n  componentDidMount(){\n    let url = \"http://localhost:3010/api/v1/articles\"\n   \n    fetch(url)\n    .then(resp=>resp.json())\n    .then(article=>{\n      this.setState({\n        articles: article,\n        // selectedArticles: article\n      })\n    })\n    const token=localStorage.getItem(\"token\")\n    if(token){\n      fetch(\"http://localhost:3010/api/v1/auto_login\", {\n              headers: {\n                \"Authorization\": token\n            }\n          })\n          .then(res => res.json())\n          .then(response=>{\n            if(response.errors){\n              localStorage.removeItem(\"user_id\")\n              alert(response.errors)\n            } else{\n              this.setState({\n                currentUser: response\n              })\n            }\n          })\n        }\n      }\n\n  setCurrentUser = user =>{\n    this.setState({\n      currentUser: user,\n      likes: user.likes\n    })\n  }\n\n  logout = () =>{\n    this.setState({\n      currentUser: null\n    })\n    this.props.history.push('/')\n  }\n  // changeFilter = (filterInput) => {\n  //   console.log(filterInput)\n  //   this.setState({\n  //     filter: filterInput\n  //   })\n  // }\n\n  handleSearch = (event) => {\n    this.setState({\n      filter: event.target.value\n    })\n  }\n\n  changeCategory = (category) => {\n    this.setState({\n      selectedCategory: category\n    })\n  }\n\n  categoryFilter = () => {\n    let selected;\n    switch(this.state.selectedCategory){\n      case \"tech\":\n        selected= this.state.articles.filter(article=>article.category===\"tech\")\n        break;\n      case \"travel\":\n        selected = this.state.articles.filter(article=>article.category===\"travel\")\n        break;\n      default:\n        selected= this.state.articles\n        break;\n    }\n    return selected\n  }\n\n  addLikes = selectedArticle => {\n    console.log(selectedArticle)\n    this.setState({\n      likes: [selectedArticle, ...this.state.likes]\n    })\n  }\n\n  //   deleteLikes = articleId => {\n  //   let url= `http://localhost:3010/api/v1/likes/${articleId}`\n  //   fetch(url,{\n  //     method: \"DELETE\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //       \"Accept\": \"application/json\"\n  //     }\n  //   })\n  //   .then(()=>{\n  //     let filtered=this.state.likes.filter(liked=>liked.id !== articleId)\n  //     this.setState({\n  //       likes: filtered\n  //     })\n  //   })\n  // }\n\n  deleteLikes = remLiked => {\n    \n  }\n\n  selectedArticle = article => {\n    console.log(article)\n    this.setState({\n      selectedArticle: article\n    })\n  }\n  \n  render(){\n    // {this.state.articles.filter(article=>{\n    //   return article.title.toLowerCase().includes(this.state.filter.toLowerCase()) ||\n    //          article.overview.toLowerCase().includes(this.state.filter.toLowerCase())\n    // })}\n    return(\n      <div>\n        <h1 href=\"/\" style={{textAlign:\"center\", color: \"dark grey\"}}> THE WANDER TIMES\n        </h1>\n        <NavContainer currentUser={this.state.currentUser}\n                      handleSearch={this.handleSearch}\n                      logout={this.logout}\n                      />\n           <Switch>\n           <Route path='/users/:id' \n                  render={(routerProps)=>{\n                    return <Profile\n                    deleteLikes={this.deleteLikes}\n                    likes={this.state.likes}\n                    articles={this.state.articles}\n                    selectedArticle={this.selectedArticle}\n                    deleteLikes={this.deleteLikes}\n                  {...routerProps}\n           />\n         }}></Route>\n          <Route path='/login' \n                 render={(routerProps)=>{\n                     return <Login \n                     setCurrentUser={this.setCurrentUser} \n                   {...routerProps}\n            />\n          }}></Route>\n           <Route path='/signup' \n                 render={(routerProps)=>{\n                     return <Signup \n                     setCurrentUser={this.setCurrentUser} \n                   {...routerProps}\n            />\n          }}></Route>\n          <Route path='/' render={(routerProps)=>{\n            return  <Fragment> <CategoryContainer articles={this.state.articles}\n            changeCategory={this.changeCategory}\n            categoryFilter={this.categoryFilter} {...routerProps}\n         />\n        <MainContainer\n        articles={this.categoryFilter()}\n        filter={this.state.filter}\n        addLikes={this.addLikes}\n        currentUser={this.state.currentUser}\n        selectedArticle={this.selectedArticle}\n        deleteLikes={this.deleteLikes}\n        likes={this.state.likes}\n        />\n          </Fragment>\n          }}>\n          </Route>\n        </Switch>\n      </div>  \n    )\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}